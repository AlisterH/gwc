*** markers.c.rel	2009-01-19 18:42:04.000000000 -0700
--- markers.c	2009-11-01 14:34:13.000000000 -0700
***************
*** 234,254 ****
  
  	   for (j = 0; j < num_song_markers+(1-blanks_marked); j += 1+blanks_marked) {
  	      long end;
! 	      long start = song_markers[j] ;
! 	      long length ;
  	      int j1 = j+1 ;
  
! 	      if(j1 < num_song_markers) {
! 		  length = song_markers[j+1] - start + 1 ;
  	      } else {
  		  length = (prefs.n_samples-1) - start + 1 ;
  	      }
! 
  #define AUDIO_BLOCK_LEN 588
  	      length = ((length + AUDIO_BLOCK_LEN / 2) / AUDIO_BLOCK_LEN) * AUDIO_BLOCK_LEN ;
  
  	      end = start + length -1 ;
! 
  	      fprintf(toc, "TRACK AUDIO\n");
  	      if (found_text) {
  		 fprintf(toc, "   CD_TEXT {\n      LANGUAGE 0 {\n");
--- 234,264 ----
  
  	   for (j = 0; j < num_song_markers+(1-blanks_marked); j += 1+blanks_marked) {
  	      long end;
! 	      long start;
! 	      long length, length1 ;
  	      int j1 = j+1 ;
  
! 	      //	      printf("j %i, j1 %i, N %i\n", j, j1, num_song_markers);
! 	      if (j == 0) {
! 		start = 0;
! 	      } else {
! 		start = song_markers[j-1];
! 	      } 
! 	      if(j1 <= num_song_markers) {
! 		  length = song_markers[j] - start + 1 ;
  	      } else {
  		  length = (prefs.n_samples-1) - start + 1 ;
  	      }
! 	      length1=length;
  #define AUDIO_BLOCK_LEN 588
  	      length = ((length + AUDIO_BLOCK_LEN / 2) / AUDIO_BLOCK_LEN) * AUDIO_BLOCK_LEN ;
  
  	      end = start + length -1 ;
! 	      if (end > prefs.n_samples-1) {
! 		end = end-AUDIO_BLOCK_LEN;
! 	      }
! 	      //	      printf("Track: %i, start: %i, end: %i, length: %i (%i, %i) File: %i\n",
! 	      //		     j+1, start, end, length, length1, end - start, prefs.n_samples-1);
  	      fprintf(toc, "TRACK AUDIO\n");
  	      if (found_text) {
  		 fprintf(toc, "   CD_TEXT {\n      LANGUAGE 0 {\n");
***************
*** 381,386 ****
--- 391,397 ----
        }
        song_markers[i] = loc ;
        num_song_markers++; 
+       //      printf("Added marker #%i at %i\n", i, loc);
        return 1 ;
     }
  }
